/**
 *
 * Mixin helpers
 *
 * ----------------------------------------------------------------------------
 * 
 * Structure:
 *
 *      1. Vendor
 *      2. Media breakpoint
 *      3. Opacity
 *      4. Placeholder
        5. Theme mixin
 *
 *
 * ----------------------------------------------------------------------------
 *
 */



/**
 * 1. Vendor
 * -----------------------------------------------------------------------------
 */

/**
 * A lightweight way of vendor-prefixing things:
 *
 * @include vendor(transition, opacity 0.3s ease-out, margin-top 5s linear);
 */
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}
//test one move this when you add images
.img-rounded {
    @include vendor(border-radius, 50% 50% 50% 50%);
}
/**
 * 2. Break point
 * -----------------------------------------------------------------------------
 */


@mixin media($breakpoint) {
    @if $breakpoint == "mobile-only" {
        @media only screen and (max-width: $screen-mobile) {
            @content;
        }
    } @else if $breakpoint == "skinny-down" {
        @media only screen and (max-width: $screen-skinny){
           @content;
        } 
    
    } @else if $breakpoint == "skinny-only" {
        @media only screen and ($screen-skinny) and (max-width: $screen-skinny-max){
           @content;
        } 
    } @else if $breakpoint == "skinny-up" {
        @media only screen and (min-width: $screen-skinny) {
           @content;
        } 
    
    } @else if $breakpoint == "desktop-only" {
        @media only screen and (min-width: $screen-desktop) and (max-width: $screen-desktop-max){
           @content;
        } 
     } @else if $breakpoint == "desktop-up" {
        @media only screen and (min-width: $screen-desktop){
           @content;
        }  
    } @else if $breakpoint == "wide" {
        @media only screen and (min-width: $screen-wide) {
           @content;
        }  
    }
}

//need to add in the crazy polly fill thing so if i do a query that is skinny up and i want it to show in ie 8 it extends a special class


.element{

    @include media(wide){
        background-color:#F92672;
    }
    @include media(desktop-only){
        background-color:#A6E22E;
    }
    @include media(skinny-only){
        background-color:#4AA1C5;
    }
    @include media(mobile-only){
        background-color:#E6DB74;
    }

}

/**
 * 3. Opacity mixin
 * -----------------------------------------------------------------------------
 */

@mixin opacity($value) {
    $ieOpacity: 100 * $value;
    opacity: $value;
    filter: alpha(opacity=#{$ieOpacity});
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{50})";
}
.overlay--50 {
    @include opacity(0.5);
}

.overlay--25 {
    @include opacity(0.25);
}




/**
 * 4. Placeholder mixin
 * -----------------------------------------------------------------------------
 */
@mixin placeholder($color) {
    &::-webkit-input-placeholder { /* WebKit browsers */
        color:    $color;
    }
    &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
        color:    $color;
    }
    &::-moz-placeholder { /* Mozilla Firefox 19+ */
        color:    $color;
    }
    &:-ms-input-placeholder { /* Internet Explorer 10+ */
        color:    $color;
    }
}

.pink-input-text {
    /* @include placeholder($color);*/
    @include placeholder(#F92672);
}


/**
 * 5. Simple theme mixins
 * -----------------------------------------------------------------------------
 */

@mixin theme-block($bg-color, $txt-color, $border-color){
    background-color:$bg-color;
    color:$txt-color;
    border-color:$border-color;
}

// Sizing shortcuts
@mixin box-dimensions($height, $width){
    height: $height;
    width:  $width;
}

@mixin square($size){
    height: $size;
    width:  $size;
}


// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}
// Mixins for forms
// --------------------

// Webkit-style focus
@mixin tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}


@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder            { color: $color; } // Firefox 4-18
  &::-moz-placeholder           { color: $color; } // Firefox 19+
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}


@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
  // Color the label and help text
  .help-block,
  .control-label {
    color: $text-color;
  }
  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: $border-color;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus {
      border-color: darken($border-color, 10%);
      //$shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
      //@include box-shadow($shadow);
    }
  }
  // Set validation states also for addons
  .input-group-addon {
    color: $text-color;
    border-color: $border-color;
    background-color: $background-color;
  }
}


// Grid System
// -----------

// Centered container element
%container-fixed {
  margin-right: auto;
  margin-left: auto;
  padding-left:  ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
  @extend %clearfix;
}

// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);
  @extend %clearfix;
}
